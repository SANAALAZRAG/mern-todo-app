{"ast":null,"code":"var _jsxFileName = \"D:\\\\mern-todo-app\\\\frontend\\\\src\\\\components\\\\TaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport api from \"../axiosConfig\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = ({\n  setTasks\n}) => {\n  _s();\n  const [newTask, setNewTask] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!newTask.trim()) {\n      return;\n    }\n    setIsLoading(true);\n    try {\n      // Envoyez la nouvelle tâche au serveur\n      const res = await api.post(\"/tasks\", {\n        title: newTask\n      });\n\n      // Ajoutez la nouvelle tâche à la liste\n      setTasks(prevTasks => [...prevTasks, res.data]);\n\n      // Réinitialisez le champ\n      setNewTask(\"\");\n    } catch (err) {\n      console.error(\"Erreur lors de l'ajout de la tâche:\", err);\n      alert(\"Erreur lors de l'ajout de la tâche\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"task-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newTask,\n      onChange: e => setNewTask(e.target.value),\n      placeholder: \"Nouvelle t\\xE2che\",\n      disabled: isLoading,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: isLoading || !newTask.trim(),\n      children: isLoading ? \"Ajout...\" : \"Ajouter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskForm, \"IY810uHzD5fxn6wyTrFjGRzeWww=\");\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","api","jsxDEV","_jsxDEV","TaskForm","setTasks","_s","newTask","setNewTask","isLoading","setIsLoading","handleSubmit","e","preventDefault","trim","res","post","title","prevTasks","data","err","console","error","alert","onSubmit","className","children","type","value","onChange","target","placeholder","disabled","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/mern-todo-app/frontend/src/components/TaskForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport api from \"../axiosConfig\";\r\n\r\nconst TaskForm = ({ setTasks }) => {\r\n  const [newTask, setNewTask] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  \r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!newTask.trim()) {\r\n      return;\r\n    }\r\n    \r\n    setIsLoading(true);\r\n    \r\n    try {\r\n      // Envoyez la nouvelle tâche au serveur\r\n      const res = await api.post(\"/tasks\", { title: newTask });\r\n      \r\n      // Ajoutez la nouvelle tâche à la liste\r\n      setTasks((prevTasks) => [...prevTasks, res.data]);\r\n      \r\n      // Réinitialisez le champ\r\n      setNewTask(\"\");\r\n    } catch (err) {\r\n      console.error(\"Erreur lors de l'ajout de la tâche:\", err);\r\n      alert(\"Erreur lors de l'ajout de la tâche\");\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"task-form\">\r\n      <input\r\n        type=\"text\"\r\n        value={newTask}\r\n        onChange={(e) => setNewTask(e.target.value)}\r\n        placeholder=\"Nouvelle tâche\"\r\n        disabled={isLoading}\r\n        required\r\n      />\r\n      \r\n      <button \r\n        type=\"submit\" \r\n        disabled={isLoading || !newTask.trim()}\r\n      >\r\n        {isLoading ? \"Ajout...\" : \"Ajouter\"}\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TaskForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,GAAG,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACjC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMW,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI,CAACN,OAAO,CAACO,IAAI,CAAC,CAAC,EAAE;MACnB;IACF;IAEAJ,YAAY,CAAC,IAAI,CAAC;IAElB,IAAI;MACF;MACA,MAAMK,GAAG,GAAG,MAAMd,GAAG,CAACe,IAAI,CAAC,QAAQ,EAAE;QAAEC,KAAK,EAAEV;MAAQ,CAAC,CAAC;;MAExD;MACAF,QAAQ,CAAEa,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAEH,GAAG,CAACI,IAAI,CAAC,CAAC;;MAEjD;MACAX,UAAU,CAAC,EAAE,CAAC;IAChB,CAAC,CAAC,OAAOY,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,qCAAqC,EAAEF,GAAG,CAAC;MACzDG,KAAK,CAAC,oCAAoC,CAAC;IAC7C,CAAC,SAAS;MACRb,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,oBACEP,OAAA;IAAMqB,QAAQ,EAAEb,YAAa;IAACc,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACjDvB,OAAA;MACEwB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAErB,OAAQ;MACfsB,QAAQ,EAAGjB,CAAC,IAAKJ,UAAU,CAACI,CAAC,CAACkB,MAAM,CAACF,KAAK,CAAE;MAC5CG,WAAW,EAAC,mBAAgB;MAC5BC,QAAQ,EAAEvB,SAAU;MACpBwB,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eAEFlC,OAAA;MACEwB,IAAI,EAAC,QAAQ;MACbK,QAAQ,EAAEvB,SAAS,IAAI,CAACF,OAAO,CAACO,IAAI,CAAC,CAAE;MAAAY,QAAA,EAEtCjB,SAAS,GAAG,UAAU,GAAG;IAAS;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEX,CAAC;AAAC/B,EAAA,CAjDIF,QAAQ;AAAAkC,EAAA,GAARlC,QAAQ;AAmDd,eAAeA,QAAQ;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}